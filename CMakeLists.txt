cmake_minimum_required(VERSION 2.8.3)
project(ros_pcduino)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS roscpp sensor_msgs std_msgs cv_bridge message_generation)

## System dependencies are found with CMake's conventions
# find_package(Boost REQUIRED COMPONENTS system)


## Uncomment this if the package has a setup.py. This macro ensures
## modules and global scripts declared therein get installed
## See http://ros.org/doc/groovy/api/catkin/html/user_guide/setup_dot_py.html
# catkin_python_setup()

#######################################
## Declare ROS messages and services ##
#######################################

## Generate messages in the 'msg' folder
add_message_files(
  FILES
#  TwistWithMask.msg
)

## Generate services in the 'srv' folder
# add_service_files(
#   FILES
#   Service1.srv
#   Service2.srv
# )

## Generate added messages and services with any dependencies listed here
generate_messages(
  DEPENDENCIES
  geometry_msgs
)

###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
   INCLUDE_DIRS include
#  LIBRARIES ros_pcduino
  CATKIN_DEPENDS message_runtime
#  DEPENDS system_lib
)

###########
## Build ##
###########

set(c_env_dir /home/viki/c_enviroment)
set(arduino_core_dir ${c_env_dir}/hardware/arduino/cores/arduino)
set(arduino_variants_dir ${c_env_dir}/hardware/arduino/variants/sunxi)

## Specify additional locations of header files
## Your package locations should be listed before other locations
include_directories(include
  sensor
  ${catkin_INCLUDE_DIRS}
  ${arduino_core_dir}
  ${arduino_variants_dir}
  ${c_env_dir}
)

## Common libs
add_library(csvparser src/csvparser.cpp)
add_library(Utility src/Utility.cpp)

## Sensors
add_library(sr04 sensor/SR04.cpp)
target_link_libraries(sr04 ${c_env_dir}/libarduino.a)
add_library(motor sensor/motor.c)
target_link_libraries(motor ${c_env_dir}/libarduino.a)

## Add cmake target dependencies of the executable/library
## as an example, message headers may need to be generated before nodes
#add_dependencies(sr04 ${c_env_dir}/libarduino.a)

## Common nodes
add_executable(sonar3 node/common/sonar3.cpp)
target_link_libraries(sonar3 sr04 ${catkin_LIBRARIES})
add_executable(vel_center node/common/vel_center.cpp)
target_link_libraries(vel_center ${catkin_LIBRARIES})

## Rovio nodes
add_executable(rovio_cmd_center node/rovio/cmd_center.cpp)
target_link_libraries(rovio_cmd_center csvparser ${catkin_LIBRARIES})
add_executable(rovio_follower node/rovio/follower.cpp)
target_link_libraries(rovio_follower Utility ${catkin_LIBRARIES})
add_executable(rovio_avoidance node/rovio/avoidance.cpp)
target_link_libraries(rovio_avoidance Utility ${catkin_LIBRARIES})

## Rovio nodes
add_executable(irobot_cmd_center node/irobot/cmd_center.cpp)
target_link_libraries(irobot_cmd_center csvparser ${catkin_LIBRARIES})
add_executable(irobot_follower node/irobot/follower.cpp)
target_link_libraries(irobot_follower Utility ${catkin_LIBRARIES})
add_executable(irobot_avoidance node/irobot/avoidance.cpp)
target_link_libraries(irobot_avoidance Utility ${catkin_LIBRARIES})

## Test
add_executable(test_camera test/test_camera.cpp)
target_link_libraries(test_camera Utility ${catkin_LIBRARIES})
add_executable(test_sonar3 test/test_sonar3.cpp)
target_link_libraries(test_sonar3 sr04 ${catkin_LIBRARIES})

#############
## Install ##
#############

# all install targets should use catkin DESTINATION variables
# See http://ros.org/doc/groovy/api/catkin/html/adv_user_guide/variables.html

## Mark executable scripts (Python etc.) for installation
## in contrast to setup.py, you can choose the destination
# install(PROGRAMS
#   scripts/my_python_script
#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark executables and/or libraries for installation
# install(TARGETS ros_pcduino ros_pcduino_node
#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark cpp header files for installation
# install(DIRECTORY include/${PROJECT_NAME}/
#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
#   FILES_MATCHING PATTERN "*.h"
#   PATTERN ".svn" EXCLUDE
# )

## Mark other files for installation (e.g. launch and bag files, etc.)
# install(FILES
#   # myfile1
#   # myfile2
#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
# )

#############
## Testing ##
#############

## Add gtest based cpp test target and link libraries
# catkin_add_gtest(${PROJECT_NAME}-test test/test_ros_pcduino.cpp)
# if(TARGET ${PROJECT_NAME}-test)
#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})
# endif()

## Add folders to be run by python nosetests
# catkin_add_nosetests(test)
